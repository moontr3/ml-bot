import base64
import io
import random
from discord.ext import commands
import discord
from log import *
from typing import *
from config import *
import utils
import api
from russian_names import RussianNames
import transliterate
import aiohttp


# setup
async def setup(bot: commands.Bot):

    @bot.hybrid_command(
        name='–ø–∏–ø–∏',
        description='–ü–æ–∫–∞–∑–∞—Ç—å —Ä–∞–∑–º–µ—Ä –ø–∏–ø–∏.',
        aliases=['pipi','penis','—Ö—É–π','–ø–∏—Å—å–∫–∞']
    )
    @discord.app_commands.describe(–∏–º—è='–ß–µ–π —Ä–∞–∑–º–µ—Ä –ø–æ–∫–∞–∑–∞—Ç—å')
    async def slash_pipi(ctx: commands.Context, *, –∏–º—è:str):
        '''
        Generates a random number between 1 and 30.
        '''
        name = –∏–º—è

        length = random.randint(1,30)
        violent_imagery = f'**8{"="*length}D (–¥–ª–∏–Ω–∞: {length} —Å–º)**'
        title = f'‚úÖ –ø–∏—Å—å–∫–∞ {name}'

        embed = discord.Embed(
            color=DEFAULT_C, title=title, description=violent_imagery
         )
        embed.set_footer(
            text=ctx.author.name,
            icon_url=ctx.author.avatar.url if ctx.author.avatar else None
        )
        await ctx.reply(embed=embed)


    @bot.hybrid_command(
        name='–Ω–µ–¥–∞–≤–Ω–æ',
        description='–ù–µ–¥–∞–≤–Ω–æ –º–µ–Ω—è ...',
        aliases=['nedavno']
    )
    @discord.app_commands.describe(–∏–º—è='–ö—Ç–æ?')
    async def slash_nedavno(ctx: commands.Context, *, –∏–º—è:str):
        '''
        –ù–µ–¥–∞–≤–Ω–æ –º–µ–Ω—è —Ç—Ä–∞—Ö–Ω—É–ª.
        '''
        name = –∏–º—è

        embed = discord.Embed(
            color=DEFAULT_C,
            description=f'–ù–µ–¥–∞–≤–Ω–æ –º–µ–Ω—è —Ç—Ä–∞—Ö–Ω—É–ª {name}. –Ø –ø–æ–ª–∑ –ø–æ —Å–Ω–µ–≥—É, –º–∞–ª–µ–Ω—å–∫–∏–π, —á—É–º–∞–∑—ã–π. –ú–µ–Ω—è –ø–æ–¥–Ω—è–ª–∏ –∏ –ø–æ–≥–ª–∞–¥–∏–ª–∏. –Ø –ø–æ—Å–º–æ—Ç—Ä–µ–ª –Ω–∞ {name} —Å–≤–æ–∏–º–∏ –º–∞–ª–µ–Ω—å–∫–∏–º–∏ –¥–æ–±—Ä—ã–º–∏ –≥–ª–∞–∑–∫–∞–º–∏ –∏ –Ω–∞—á–∞–ª —É—Ä—á–∞—Ç—å. –¢–æ–≥–¥–∞ {name} –¥–æ—Å—Ç–∞–ª —á–ª–µ–Ω –∏–∑ —à—Ç–∞–Ω–æ–≤ –∏ –Ω–∞—á–∞–ª –ø—Ä–æ–ø–∏—Ö–∏–≤–∞—Ç—å –º–Ω–µ –≤ –∞–Ω—É—Å. –ö–æ–Ω–µ—á–Ω–æ, —ç—Ç–æ –±—ã–ª–æ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ. –Ø –Ω–∞—á–∞–ª –º—è—É–∫–∞—Ç—å, —Å—Ç–æ–Ω–∞—Ç—å. –≠—Ç–æ –±—ã–ª–æ –æ—á–µ–Ω—å –±–æ–ª—å–Ω–æ. –ù–æ —Ç–∞–∫–æ–µ –º–∞–ª–µ–Ω—å–∫–æ–µ, –±–µ–∑–∑–∞—â–∏—Ç–Ω–æ–µ —Å—É—â–µ—Å—Ç–≤–æ –∫–∞–∫ —è –Ω–µ –º–æ–≥–ª–æ –Ω–∏—á–µ–≥–æ –µ–º—É –ø—Ä–æ—Ç–∏–≤–æ–ø–æ—Å—Ç–∞–≤–∏—Ç—å. –ï—â—ë –æ–¥–Ω–æ —Å–∏–ª—å–Ω–æ–µ –Ω–∞–∂–∞—Ç–∏–µ - –∏ –º–æ–π –∞–Ω–∞–ª –ø–æ—Ä–≤–∞–Ω. {name} –ø–æ—á—É–≤—Å—Ç–≤–æ–≤–∞–ª —Å—Ç—Ä—É–π–∫–∏ –∫—Ä–æ–≤–∏, —Å—Ç–µ–∫–∞—é—â–∏–µ –ø–æ –µ–≥–æ —á–ª–µ–Ω—É. –Ø –≤—Å—ë –∫—Ä–∏—á–∞–ª. {name} —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–∏ –Ω–µ —Ç—Ä–∞—Ö–∞–ª –º–µ–Ω—è, –∞ –ø—Ä–æ—Å—Ç–æ –¥—Ä–æ—á–∏–ª –º–Ω–æ–π. –û–Ω —Å–≤–æ–∏–º —á–ª–µ–Ω–æ–º —Ä–∞–∑–º–æ–∑–∂–∏–ª –º–Ω–µ –∂–µ–ª—É–¥–æ–∫. –ò —Å–µ—Ä–¥—Ü–µ. –ê –∫–æ–≥–¥–∞ —ç—è–∫—É–ª–∏—Ä–æ–≤–∞–ª, —Å–ø–µ—Ä–º–∞ –≤—ã—à–ª–∞ —á–µ—Ä–µ–∑ –Ω–æ—Å –∏ —Ä–æ—Ç. {name} –µ—â—ë —Ä–∞–∑ –ø–æ–≥–ª–∞–¥–∏–ª —Ç–µ–ª—å—Ü–µ –º–∏–ª–æ–≥–æ –º–µ–Ω—è –∏ –≤—ã–∫–∏–Ω—É–ª –Ω–∞ —Å–Ω–µ–≥. –í—Å—ë —Ä–∞–≤–Ω–æ —Ç–∞–∫–æ–≥–æ –±–µ–¥–Ω—è–∂–∫—É –∫–∞–∫ –º–µ–Ω—è —Å—ä–µ–ª–∏ –±—ã —Å–æ–±–∞–∫–∏. –ê {name} –Ω–∞–ø–æ–ª–Ω–∏–ª –º–æ—é –∂–∏–∑–Ω—å —Å–º—ã—Å–ª–æ–º. –ò —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏–µ–º.'
        )
        embed.set_footer(
            text=ctx.author.name,
            icon_url=ctx.author.avatar.url if ctx.author.avatar else None
        )
        await ctx.reply(embed=embed)


    @bot.hybrid_command(
        name='–∞–ª—å—Ü–≥–µ–π–º–µ—Ä',
        description='–ó–∞–±—ã–ª',
        aliases=['alzheimer']
    )
    @discord.app_commands.describe(—Ç–µ–∫—Å—Ç='–¢–µ–∫—Å—Ç, –∫–æ—Ç–æ—Ä—ã–π –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å')
    async def slash_alzheimer(ctx: commands.Context, *, —Ç–µ–∫—Å—Ç:str):
        '''
        Repeats text several times..
        '''
        text = —Ç–µ–∫—Å—Ç

        # too big message
        num = 10-int(len(text)/15)
        if num <= 1:
            num = 1

        if len(text)*num*2 > 1000:
            await ctx.reply(view=c_to_view(TOO_LONG_EMBED), ephemeral=True)
            return

        # answering
        amount = random.randint(num, num*2)

        embed = discord.Embed(
            color=DEFAULT_C, title='‚úÖ –£—Å–ø–µ—à–Ω–æ!',
            description=text*amount
        )
        embed.set_footer(
            text=ctx.author.name,
            icon_url=ctx.author.avatar.url if ctx.author.avatar else None
        )
        await ctx.reply(embed=embed)
        

    @bot.hybrid_command(
        name='–∫—Ä–∞—à',
        description='–ö—Ä–∞—à–∏—Ç —á—Ç–æ-–ª–∏–±–æ',
        aliases=['crash']
    )
    @discord.app_commands.describe(–∏–º—è='–¢–æ, —á—Ç–æ –Ω—É–∂–Ω–æ –∫—Ä–∞—à–Ω—É—Ç—å')
    async def slash_crash(ctx: commands.Context, *, –∏–º—è:str):
        '''
        Crashes smth
        '''
        name = –∏–º—è

        # text too long
        if len(name) > 100:
            await ctx.reply(view=c_to_view(TOO_LONG_EMBED), ephemeral=True)
            return

        # error
        if random.random() < 0.7:
            fail_message = random.choice([
                '–Ω–æ –≤–∞–π—Ñ–∞–π –≤—ã–∫–ª—é—á–∏–ª—Å—è',
                '–Ω–æ —ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å—Ç–≤–∞ –Ω–µ—Ç',
                '–Ω–æ —Ç–≤–æ–π –∞–∫–∫–∞—É–Ω—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª–∏',
                '–Ω–æ —Å–µ—Ä–≤–µ—Ä —É–ø–∞–ª',
                '–Ω–æ –≤ –∫–æ–¥–µ –≤—ã—à–ª–∞ –æ—à–∏–±–∫–∞',
                '–Ω–æ —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫',
                f'–Ω–æ {name} –æ—Ç—Ä–∞–∑–∏–ª –∞—Ç–∞–∫—É',
                f'–Ω–æ {name} –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª –∞–Ω—Ç–∏–≤–∏—Ä—É—Å'
            ])

            if random.random() < 0.15:
                percentage_text = f'—Ç—ã —Ö–æ—Ç–µ–ª –∫—Ä–∞—à–Ω—É—Ç—å {name}'
            else:
                percentage_text = '–∑–∞–≥—Ä—É–∑–∫–∞ –¥–æ—à–ª–∞ –¥–æ ' + str(random.choices(
                    [random.randint(30,75), random.randint(90,99)],
                    weights=[0.7, 0.1]
                )[0]) + '%'

            embed = discord.Embed(
                color=ERROR_C, title=f'‚ùå –Ω–µ —É–¥–∞–ª–æ—Å—å –∫—Ä–∞—à–Ω—É—Ç—å {name}',
                description=f'{percentage_text} {fail_message}'
            )

        # success
        else:
            embed = discord.Embed(
                color=DEFAULT_C, title=f'‚úÖ –∫—Ä–∞—à {name} –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ',
                description=f'–∑–∞–≥—Ä—É–∑–∫–∞ –∑–∞–∫–æ–Ω—á–∏–ª–∞—Å—å –∏ {name} –∫—Ä–∞—à–Ω—É–ª–∏!'
            )

        # answering
        embed.set_footer(
            text=ctx.author.name,
            icon_url=ctx.author.avatar.url if ctx.author.avatar else None
        )
        await ctx.reply(embed=embed)
        
        
    @bot.hybrid_command(
        name='–¥–µ–∞–Ω–æ–Ω',
        description='–î–æ–∫—Å–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.',
        aliases=['doxx','dox','–¥–æ–∫—Å']
    )
    @commands.cooldown(1, 7, commands.BucketType.user)
    @discord.app_commands.describe(–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å='–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω–∞–¥–æ –∑–∞–¥–µ–∞–Ω–æ–Ω–∏—Ç—å')
    async def slash_doxx(ctx: commands.Context, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:discord.User):
        '''
        Generates fake info about user.
        '''
        user = –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å

        # checking if bot is getting doxxed
        if user.id == bot.user.id:
            view = to_view('–∞ —Ç—ã –Ω–µ –ø—Ä–∏—Ö—É–µ–ª', ERROR_C)
            await ctx.reply(view=view, ephemeral=True)
            return
        
        if ctx.interaction:
            await ctx.interaction.response.defer()
        else:
            await ctx.channel.typing()

        # getting data
        try:
            # name
            name = RussianNames().get_person()

            # phone
            area_code = random.choice([
                *range(900,953),
                *range(955,969),
                *range(972,999)
            ])
            num1 = "".join(random.choices('0123456789',k=3))
            num2 = "".join(random.choices('0123456789',k=2))
            num3 = "".join(random.choices('0123456789',k=2))

            number = f'+7 ({area_code}) {num1}-{num2}-{num3}'

            # gender
            if random.random() > 0.4:
                gender = random.choice(['–ú—É–∂.','–ñ–µ–Ω.'])

            else:
                # getting a random russian word
                gender = utils.get_random_word().title()

            # age
            age = random.randint(11,65)

            # ip address
            ip = '.'.join([str(random.randint(1,255)) for i in range(4)])

            # email
            provider = random.choice([
                '@vk.com',
                '@mail.ru',
                '@gmail.com',
                '@yandex.ru',
                '@yahoo.com',
                '@aol.com',
                '@hotmail.com',
                '@yahoo.co.uk',
                '@hotmail.com.au',
                '@web.de',
                '@nproxi.com',
                '@moonland.dev',
                '@bebracraft.ml',
                '@moonland.ml',
                '@femboyhunter.club',
                '@icloud.com',
                '@bk.ru'
            ])
            if random.random() < 0.3:
                numbers = ''
            else:
                numbers = ''.join(random.choices(
                    '0123456789', k=random.randint(2,6)
                ))

            base = utils.remove_md(user.name)

            email = base+numbers+provider

            # token
            userid_encoded = str(user.id).encode()
            token = base64.b64encode(userid_encoded).decode('utf-8')
            token = f'`{token}.xxxxxx.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx`'

            # face
            async with aiohttp.ClientSession() as s:
                async with s.get('https://thispersondoesnotexist.com/') as resp:
                    content = await resp.read()

            image = discord.File(io.BytesIO(content), 'face.jpg')

        except Exception as e:
            # there's an error
            embed = discord.Embed(
                color=ERROR_C, title=f'‚ùå –æ–π',
                description=f'–Ω–µ –∑–∞–¥–æ–∫—Å–∏–ª–∏üòî\n{e}'
            )
            embed.set_footer(
                text=ctx.author.name,
                icon_url=ctx.author.avatar.url if ctx.author.avatar else None
            )
            await ctx.reply(embed=embed)
            return

        # sending
        embed = discord.Embed(
            color=DEFAULT_C,
            title=f'‚úÖ {user.name} –∑–∞–¥–µ–∞–Ω–æ–Ω–µ–Ω!'
        )
        embed.add_field(name='–ò–º—è', value=name, inline=False)
        embed.add_field(name='–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞', value=number, inline=False)
        embed.add_field(name='–ü–æ–ª', value=gender, inline=False)
        embed.add_field(name='–í–æ–∑—Ä–∞—Å—Ç', value=age, inline=False)
        embed.add_field(name='IP-–∞–¥—Ä–µ—Å', value=ip, inline=False)
        embed.add_field(name='–ü–æ—á—Ç–∞', value=email, inline=False)
        embed.add_field(name='–¢–æ–∫–µ–Ω', value=token, inline=False)
        embed.set_thumbnail(url='attachment://face.jpg')

        embed.set_footer(
            text=ctx.author.name+'\n—Ñ–µ–π–∫ –∏–Ω—Ñ–∞!',
            icon_url=ctx.author.avatar.url if ctx.author.avatar else None
        )
        await ctx.reply(embed=embed, file=image)


    @bot.hybrid_command(
        name='—à–∞–Ω—Å',
        description='–ì–æ–≤–æ—Ä–∏—Ç, –Ω–∞—Å–∫–æ–ª—å–∫–æ –ø—Ä–æ—Ü–µ–Ω—Ç–æ–≤ –≤–æ–∑–º–æ–∂–Ω–æ –≤–∞—à–µ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ.',
        aliases=['chance']
    )
    @discord.app_commands.describe(–∑–∞–ø—Ä–æ—Å='–í–∞—à –≤–æ–ø—Ä–æ—Å')
    async def slash_chance(ctx: commands.Context, *, –∑–∞–ø—Ä–æ—Å:str):
        '''
        Answers with a random percentage.
        '''
        prompt = –∑–∞–ø—Ä–æ—Å

        if len(prompt) > 100:
            await ctx.reply(view=c_to_view(TOO_LONG_EMBED), ephemeral=True)
            return

        percentage = random.randint(0,100)

        prefix = random.choice([
            '–Ø –¥—É–º–∞—é, —ç—Ç–æ –≤–æ–∑–º–æ–∂–Ω–æ –Ω–∞',
            '–≠—Ç–æ –≤–æ–∑–º–æ–∂–Ω–æ –Ω–∞',
            '–®–∞–Ω—Å —ç—Ç–æ–≥–æ -',
            '–ú–Ω–µ –∫–∞–∂–µ—Ç—Å—è, —à–∞–Ω—Å —ç—Ç–æ–≥–æ',
            '–í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å —ç—Ç–æ–≥–æ -',
            '–ú–Ω–µ –∫–∞–∂–µ—Ç—Å—è, —ç—Ç–æ –≤–æ–∑–º–æ–∂–Ω–æ –Ω–∞',
            '–Ø –¥—É–º–∞—é, —á—Ç–æ –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å',
            '–Ø –¥—É–º–∞—é, —ç—Ç–æ –≤–æ–∑–º–æ–∂–Ω–æ –Ω–∞'
        ])

        # sending
        embed = discord.Embed(
            title=f'‚úÖ {prompt}', description=f'{prefix} **{percentage}%**',
            color=DEFAULT_C
        )
        embed.set_footer(
            text=ctx.author.name,
            icon_url=ctx.author.avatar.url if ctx.author.avatar else None
        )
        await ctx.reply(embed=embed)


    @bot.hybrid_command(
        name='–≤—ã–±–µ—Ä–∏',
        description='–í—ã–±–∏—Ä–∞–µ—Ç –æ–¥–Ω–æ –∏–∑ –≤—ã–¥–∞–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤.',
        aliases=['choose','choice','–≤—ã–±–æ—Ä']
    )
    @discord.app_commands.describe(
        –∑–∞–ø—Ä–æ—Å—ã='–°–ø–∏—Å–æ–∫ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤, —Ä–∞–∑–¥–µ–ª–µ–Ω–Ω—ã—Ö —á–µ—Ä–µ–∑ —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å (–ø–æ —É–º–æ–ª—á. –∑–∞–ø—è—Ç–∞—è)',
        —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å='–†–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ —É —Ç–µ–∫—Å—Ç–∞ —Å –∑–∞–ø—Ä–æ—Å–∞–º–∏ (–ø–æ —É–º–æ–ª—á. –∑–∞–ø—è—Ç–∞—è)',
    )
    async def slash_chance(ctx: commands.Context, *, –∑–∞–ø—Ä–æ—Å—ã:str, —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å:str=','):
        '''
        Answers with a random percentage.
        '''
        divider = —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å

        # generating answers
        prompts: List[str] = []
        for i in –∑–∞–ø—Ä–æ—Å—ã.split(divider):
            prompts.append(i.strip())

        prompts = [i for i in prompts if i != '' and not i.isspace()]

        if len(prompts) < 2:
            embed = discord.Embed(
                color=ERROR_C, title='‚ùå –æ–π',
                description=f'–Ω–∞–¥–æ —É–∫–∞–∑–∞—Ç—å 2 –∏–ª–∏ –±–æ–ª—å—à–µ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –æ—Ç–≤–µ—Ç–∞ —á–µ—Ä–µ–∑ `{divider}`'
            )
            await ctx.reply(embed=embed)
            return

        for i in prompts:
            if len(i) > 100:
                await ctx.reply(view=c_to_view(TOO_LONG_EMBED), ephemeral=True)
                return

        prompt = random.choice(prompts)

        # sending
        embed = discord.Embed(
            title='‚úÖ –£—Å–ø–µ—à–Ω–æ!', description=f'—è –≤—ã–±—Ä–∞–ª **{utils.remove_md(prompt)}**',
            color=DEFAULT_C
        )
        embed.set_footer(
            text=ctx.author.name,
            icon_url=ctx.author.avatar.url if ctx.author.avatar else None
        )
        await ctx.reply(embed=embed)


    @bot.hybrid_command(
        name='—ç–º–æ–¥–∂–∏',
        description='–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç, –∫–∞–∫–æ–π —ç–º–æ–¥–∂–∏ –æ—Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Ä—É–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.',
        aliases=['emoji','—ç–º–æ–¥–∑–∏']
    )
    @discord.app_commands.describe(–∏–º—è='–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, —á—å–µ–≥–æ —ç–º–æ–¥–∑–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å')
    async def slash_emoji(ctx: commands.Context, –∏–º—è:str):
        '''
        Shows an emoji corresponding to a user.
        '''
        user = –∏–º—è

        # composing message
        prefix = random.choice([
            '–Ø –¥—É–º–∞—é, ',
            '–ú–Ω–µ –∫–∞–∂–µ—Ç—Å—è, ',
            '–Ø –¥—É–º–∞—é —á—Ç–æ ',
            '–ú–Ω–µ –∫–∞–∂–µ—Ç—Å—è —á—Ç–æ '
        ])
        # using cigarrete emoji if —Ä–æ–º–∞–Ω
        if user.lower().strip() in ['<@801058884810309673>','—Ä–æ–º–∞','—Ä–æ–º–∞–Ω']:
            emoji = 'üö¨'
        else:
            emoji = random.choice(bot.mg.emojis)

        # sending
        embed = discord.Embed(
            color=DEFAULT_C, title='‚úÖ –£—Å–ø–µ—à–Ω–æ!',
            description=f'{prefix}{emoji} –æ—Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏–∑—É–µ—Ç {user}'
        )
        embed.set_footer(
            text=ctx.author.name,
            icon_url=ctx.author.avatar.url if ctx.author.avatar else None
        )
        await ctx.reply(embed=embed)


    @bot.hybrid_command(
        name='—à–∏–ø',
        description='–®–∏–ø –¥–≤—É—Ö —Å–ª—É—á–∞–π–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–ª–∏ –∫–æ–≥–æ-—Ç–æ —Å –∫–µ–º-—Ç–æ.',
        aliases=['ship']
    )
    @discord.app_commands.describe(–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å='–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, –∫–æ–≥–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —à–∏–ø–ø–µ—Ä–∏—Ç—å.')
    async def slash_ship(ctx: commands.Context, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:discord.User=None):
        '''
        Ships two random users.
        '''
        user = –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å

        # choosing users
        if user == None:
            user = random.choice(ctx.channel.members)

        rand = user
        while rand == user:
            rand = random.choice(ctx.channel.members)

        # sending
        if user.id != 698457845301248010:
            embed = discord.Embed(
                color=DEFAULT_C, title='‚úÖ –£—Å–ø–µ—à–Ω–æ!',
                description=f'{user.mention} ({utils.remove_md(user.name)})'\
                    f' **x** {rand.mention} ({utils.remove_md(rand.name)})'
            )
        # to show coffee as my soulmate
        else:
            embed = discord.Embed(
                color=DEFAULT_C, title='‚úÖ –£—Å–ø–µ—à–Ω–æ!',
                description=f'{user.mention} ({utils.remove_md(user.name)})'\
                    f' **x** <@817035020958695536> (warningcoffee3)'
            )
        embed.set_footer(
            text=ctx.author.name,
            icon_url=ctx.author.avatar.url if ctx.author.avatar else None
        )
        await ctx.reply(embed=embed)


    @bot.hybrid_command(
        name='—Å—É–¥—å–±–∞',
        description='–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–æ, —á—Ç–æ –±—ã –≤—ã —Å–¥–µ–ª–∞–ª–∏ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.',
        aliases=['destiny','fate']
    )
    @discord.app_commands.describe(–∏–º—è='–ß–µ–ª–æ–≤–µ–∫, —Å—É–¥—å–±—É –∫–æ—Ç–æ—Ä–æ–≥–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å')
    async def slash_fate(ctx: commands.Context, –∏–º—è:str):
        '''
        Shows what will happen to a user.
        '''
        user = –∏–º—è

        # composing message
        index = random.randint(0, len(bot.mg.fate_actions)-1)
        action = bot.mg.fate_actions[index]

        # sending
        desc = f'**–ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å —Å {utils.remove_md(user)}?**'
        desc += f'\n`{index+1}.` {action}'

        embed = discord.Embed(
            color=DEFAULT_C, title='‚úÖ –£—Å–ø–µ—à–Ω–æ!',
            description=desc
        )
        embed.set_image(url=FATE_IMAGE_URL)
        embed.set_footer(
            text=ctx.author.name,
            icon_url=ctx.author.avatar.url if ctx.author.avatar else None
        )
        await ctx.reply(embed=embed)